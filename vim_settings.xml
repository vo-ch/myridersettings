<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/.datagrid/cell" timestamp="1553536978806">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Controllers/InstructorPayoutDetailM2mController.cs" timestamp="1553706786534">
        <mark key="'" line="39" column="28" />
        <mark key="[" line="39" column="28" />
        <mark key="]" line="39" column="58" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" timestamp="1553697521552">
        <mark key="'" line="85" column="62" />
        <mark key="[" line="67" column="64" />
        <mark key="]" line="67" column="63" />
        <mark key="^" line="67" column="63" />
        <mark key="." line="67" column="63" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests.Core/Accounting.InstructorPayoutReportGenerator.Tests.Core.csproj" timestamp="1553618477817">
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstrunctorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Accounting.InstructorPayoutReportGenerator.csproj" timestamp="1553164172279">
        <mark key="[" line="18" column="0" />
        <mark key="]" line="18" column="0" />
        <mark key="." line="18" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Options/LmsServiceOptions.cs" timestamp="1553529476932">
        <mark key="[" line="2" column="17" />
        <mark key="]" line="2" column="26" />
        <mark key="." line="2" column="26" />
        <mark key="^" line="2" column="26" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Accounting.InstructorPayoutReportGenerator.csproj" timestamp="1553264228802">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="0" />
        <mark key="." line="5" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests.Core/Accounting.InstructorPayoutReportGenerator.IntegrationTests.Core.csproj" timestamp="1553617817084">
        <mark key="[" line="8" column="16" />
        <mark key="]" line="9" column="3" />
        <mark key="." line="9" column="3" />
        <mark key="^" line="9" column="3" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Adapters/DateTimeAdapter.cs" timestamp="1553686779206">
        <mark key="[" line="6" column="8" />
        <mark key="]" line="6" column="49" />
        <mark key="^" line="6" column="49" />
        <mark key="." line="6" column="49" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Data.DbMigration/Accounting.Data.DbMigration.csproj" timestamp="1552917429506">
        <mark key="[" line="3" column="37" />
        <mark key="]" line="3" column="38" />
        <mark key="." line="3" column="38" />
      </file>
      <file name="/Dummy.cs" timestamp="1553693362189">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Infrastructure/Initialization/Assembly/Class1.cs" timestamp="1553707375914">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests.Core/Fixtures/ServiceProviderFixture.cs" timestamp="1553696675409">
        <mark key="'" line="50" column="72" />
        <mark key="[" line="38" column="21" />
        <mark key="]" line="38" column="33" />
        <mark key="." line="38" column="33" />
        <mark key="^" line="38" column="33" />
      </file>
      <file name="C:/projects/accounting2/Accounting/Web/API/test/Accounting.Api.IntegrationTests/appsettings.Local.json" timestamp="1553094744099">
        <mark key="[" line="23" column="0" />
        <mark key="]" line="23" column="0" />
        <mark key="." line="23" column="0" />
      </file>
      <file name="C:/projects/UI-Web/ClientApp/themes/three/styles/text/fonts.scss" timestamp="1553767922565">
        <mark key="'" line="21" column="20" />
        <mark key="[" line="21" column="17" />
        <mark key="]" line="21" column="49" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/Accounting.InstructorPayoutReportGenerator.IntegrationTests.csproj" timestamp="1553617179636">
        <mark key="[" line="38" column="0" />
        <mark key="]" line="38" column="0" />
        <mark key="." line="38" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/DependencyInjection/AccountingRepositoryExtensions.cs" timestamp="1553527229038">
        <mark key="[" line="1" column="0" />
        <mark key="]" line="1" column="0" />
        <mark key="." line="1" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport_Mock.html" timestamp="1553768031536">
        <mark key="'" line="107" column="12" />
        <mark key="[" line="88" column="36" />
        <mark key="]" line="88" column="37" />
        <mark key="." line="88" column="37" />
        <mark key="^" line="10" column="51" />
      </file>
      <file name="/CustomAssemblyLoadContext.cs" timestamp="1553707284725">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="22" column="1" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/IPdfService.cs" timestamp="1553710528831">
        <mark key="[" line="10" column="62" />
        <mark key="]" line="10" column="124" />
        <mark key="." line="10" column="62" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" timestamp="1553710792019">
        <mark key="'" line="57" column="57" />
        <mark key="[" line="45" column="31" />
        <mark key="]" line="45" column="32" />
        <mark key="^" line="46" column="32" />
        <mark key="." line="45" column="32" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Data/Mappings/InstructorPayoutMap.cs" timestamp="1553510188697">
        <mark key="[" line="28" column="101" />
        <mark key="]" line="28" column="101" />
        <mark key="." line="28" column="101" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Accounting/InstructorPayoutService.cs" timestamp="1553679563492">
        <mark key="'" line="19" column="44" />
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
        <mark key="^" line="60" column="70" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Extensions/PdfServiceExtensions.cs" timestamp="1553707578726">
        <mark key="'" line="33" column="34" />
        <mark key="[" line="33" column="108" />
        <mark key="]" line="34" column="11" />
        <mark key="." line="34" column="11" />
        <mark key="^" line="34" column="11" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Data/AccountingRepository.cs" timestamp="1553678541467">
        <mark key="'" line="10" column="25" />
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
        <mark key="^" line="21" column="18" />
      </file>
      <file name="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Contracts/IPdfGenerator.cs" timestamp="1553710333338">
        <mark key="[" line="6" column="75" />
        <mark key="]" line="6" column="82" />
        <mark key="^" line="6" column="82" />
        <mark key="." line="6" column="82" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Exceptions/InstructorPayoutAlreadyCalculatedException.cs" timestamp="1553534611481">
        <mark key="[" line="5" column="46" />
        <mark key="]" line="5" column="54" />
        <mark key="^" line="5" column="54" />
        <mark key="." line="5" column="54" />
      </file>
      <file name="C:/projects/accounting2/Accounting/Web/API/test/Accounting.Api.IntegrationTests/Data/PaymentsDb/DesignTimePaymentsDbContextFactory.cs" timestamp="1553097404360">
        <mark key="[" line="9" column="52" />
        <mark key="]" line="9" column="52" />
        <mark key="." line="9" column="52" />
      </file>
      <file name="/Accounting.Api.csproj" timestamp="1553705727494">
        <mark key="[" line="20" column="0" />
        <mark key="]" line="24" column="16" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstrunctorPayoutReportGenerator/test/Accounting.InstrunctorPayoutReportGenerator.Tests/FunctionTest.cs" timestamp="1552994195883">
        <mark key="[" line="18" column="0" />
        <mark key="]" line="18" column="0" />
        <mark key="." line="18" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutBreakdownCalculator/test/Accounting.InstructorPayoutBreakdownCalculator.Tests/Accounting.InstructorPayoutBreakdownCalculator.Tests.csproj" timestamp="1553617320782">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="34" />
        <mark key="." line="8" column="590" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" timestamp="1553697650630">
        <mark key="'" line="130" column="67" />
        <mark key="[" line="116" column="40" />
        <mark key="]" line="116" column="39" />
        <mark key="^" line="116" column="39" />
        <mark key="." line="116" column="39" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests.Core/ObjectMothers/InstructorPayoutMother.cs" timestamp="1553678119582">
        <mark key="'" line="8" column="42" />
        <mark key="[" line="13" column="73" />
        <mark key="]" line="13" column="102" />
        <mark key="." line="13" column="102" />
        <mark key="^" line="13" column="102" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstrunctorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests/Accounting.InstructorPayoutReportGenerator.Tests.csproj" timestamp="1553004255782">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutDetailsCalculator/test/Accounting.InstructorPayoutDetailsCalculator.Tests/Accounting.InstructorPayoutDetailsCalculator.Tests.csproj" timestamp="1552901113161">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="55" />
        <mark key="." line="6" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Accounting/IInstructorPayoutService.cs" timestamp="1553678717077">
        <mark key="[" line="10" column="87" />
        <mark key="]" line="10" column="117" />
        <mark key="." line="10" column="87" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Http/Accounting/InstructorPayoutHttpService.cs" timestamp="1553680625317">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
        <mark key="^" line="42" column="18" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Accounting.Api.csproj" timestamp="1553705740808">
        <mark key="[" line="26" column="16" />
        <mark key="]" line="27" column="3" />
        <mark key="." line="27" column="3" />
        <mark key="^" line="27" column="3" />
      </file>
      <file name="/PdfServiceExtensions.cs" timestamp="1553707541876">
        <mark key="[" line="31" column="0" />
        <mark key="]" line="32" column="108" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/01f8e213-5ecc-4708-bead-67f184c26463/console_1.sql" timestamp="1553705146139">
        <mark key="[" line="28" column="43" />
        <mark key="]" line="28" column="64" />
        <mark key="." line="28" column="64" />
        <mark key="^" line="28" column="64" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutBreakdownCalculator/src/Accounting.InstructorPayoutBreakdownCalculator/Data/IAccountingRepository.cs" timestamp="1553523155190">
        <mark key="[" line="12" column="24" />
        <mark key="]" line="12" column="26" />
        <mark key="." line="12" column="26" />
        <mark key="^" line="12" column="26" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests.Core/Builders/InstructorPayoutBreakdownCalculatorInputBuilder.cs" timestamp="1553619142069">
        <mark key="[" line="22" column="42" />
        <mark key="]" line="22" column="41" />
        <mark key="." line="22" column="41" />
        <mark key="^" line="22" column="41" />
      </file>
      <file name="C:/projects/accounting2/Accounting/Web/API/src/Accounting.Api/Models/QuarterlyPayout/GetQuarterlyPayoutRequest.cs" timestamp="1553093220205">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Data/Mappings/QuarterlyPayoutMap.cs" timestamp="1553189169960">
        <mark key="[" line="23" column="0" />
        <mark key="]" line="23" column="0" />
        <mark key="." line="23" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Http/Accounting/IInstructorPayoutHttpService.cs" timestamp="1553680633430">
        <mark key="[" line="7" column="21" />
        <mark key="]" line="7" column="48" />
        <mark key="." line="9" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests.Core/ObjectMothers/InstructorPayoutReportInputMother.cs" timestamp="1553620076008">
        <mark key="[" line="5" column="17" />
        <mark key="]" line="5" column="49" />
        <mark key="." line="16" column="47" />
        <mark key="^" line="16" column="47" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Startup.cs" timestamp="1553686851851">
        <mark key="'" line="30" column="33" />
        <mark key="[" line="47" column="26" />
        <mark key="]" line="47" column="66" />
        <mark key="." line="47" column="66" />
        <mark key="^" line="47" column="66" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/InstructorPayoutService.cs" timestamp="1553693197036">
        <mark key="'" line="67" column="53" />
        <mark key="[" line="54" column="92" />
        <mark key="]" line="55" column="11" />
        <mark key="^" line="55" column="11" />
        <mark key="." line="55" column="11" />
      </file>
      <file name="/dummy.sql" timestamp="1553704425666">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutDetailsCalculator/src/Accounting.InstructorPayoutDetailsCalculator/Program.cs" timestamp="1552664640577">
        <mark key="[" line="18" column="0" />
        <mark key="]" line="18" column="0" />
        <mark key="." line="18" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/test/Accounting.Api.Tests/Services/Pdf/PdfServiceTests.cs" timestamp="1553710571490">
        <mark key="'" line="88" column="31" />
        <mark key="[" line="88" column="53" />
        <mark key="]" line="88" column="53" />
        <mark key="^" line="88" column="64" />
        <mark key="." line="88" column="53" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/DependencyInjection/LmsServiceExtensions.cs" timestamp="1553529439289">
        <mark key="[" line="8" column="47" />
        <mark key="]" line="8" column="47" />
        <mark key="." line="8" column="47" />
        <mark key="^" line="8" column="47" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/IPdfReportService.cs" timestamp="1553507472408">
        <mark key="[" line="6" column="13" />
        <mark key="]" line="6" column="13" />
        <mark key="." line="6" column="18" />
        <mark key="^" line="6" column="18" />
      </file>
      <file name="/Dummy.txt" timestamp="1553711788233">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="32" />
        <mark key="." line="0" column="32" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests/Accounting.InstructorPayoutReportGenerator.Tests.csproj" timestamp="1553617322437">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="36" />
        <mark key="." line="3" column="0" />
        <mark key="^" line="5" column="3" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" timestamp="1553709913584">
        <mark key="[" line="299" column="29" />
        <mark key="]" line="298" column="46" />
        <mark key="^" line="298" column="46" />
        <mark key="." line="299" column="42" />
      </file>
      <file name="/payments.accounting.instructor_payout_details [payments@localhost]" timestamp="1553704415715">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/projects/UI-Web/ClientApp/styles/vars/urls.scss" timestamp="1553767931220">
        <mark key="[" line="0" column="1" />
        <mark key="]" line="0" column="9" />
      </file>
      <file name="C:/projects/cu-data-reporting/IndexFromKinesisToEsLambda.Tests/FunctionTest.cs" timestamp="1553184307927">
        <mark key="[" line="28" column="0" />
        <mark key="]" line="33" column="9" />
        <mark key="." line="33" column="9" />
      </file>
      <file name="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Implementations/DinkToPdfGenerator.cs" timestamp="1553710662701">
        <mark key="'" line="8" column="44" />
        <mark key="[" line="30" column="0" />
        <mark key="]" line="30" column="0" />
        <mark key="." line="30" column="0" />
        <mark key="^" line="29" column="58" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Exceptions/InstructorPayoutReportAlreadyGeneratedException.cs" timestamp="1553679203521">
        <mark key="'" line="23" column="75" />
        <mark key="[" line="3" column="10" />
        <mark key="]" line="3" column="62" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstrunctorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/aws-lambda-tools-defaults.json" timestamp="1553164961223">
        <mark key="[" line="17" column="41" />
        <mark key="]" line="17" column="41" />
        <mark key="." line="17" column="41" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Exceptions/ExceptionCode.cs" timestamp="1553534648361">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="12" column="9" />
        <mark key="." line="9" column="0" />
        <mark key="^" line="6" column="21" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/IInstructorPayoutService.cs" timestamp="1553680482819">
        <mark key="[" line="11" column="0" />
        <mark key="]" line="11" column="0" />
        <mark key="." line="11" column="0" />
        <mark key="^" line="6" column="18" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/InstructorPayoutHttpService.cs" timestamp="1553680440066">
        <mark key="[" line="13" column="33" />
        <mark key="]" line="13" column="33" />
        <mark key="." line="13" column="33" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests.Core/ObjectMothers/InstructorPayoutDetailsCalculatorInputMother.cs" timestamp="1553619175696">
        <mark key="[" line="7" column="22" />
        <mark key="]" line="7" column="55" />
        <mark key="." line="7" column="55" />
        <mark key="^" line="7" column="55" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Http/Accounting/InstructorPayoutService.cs" timestamp="1553679776124">
        <mark key="[" line="13" column="33" />
        <mark key="]" line="13" column="36" />
        <mark key="^" line="13" column="36" />
        <mark key="." line="13" column="36" />
      </file>
      <file name="C:/projects/accounting2/Accounting/Web/API/src/Accounting.Api/appsettings.Local.json" timestamp="1553095640157">
        <mark key="[" line="18" column="21" />
        <mark key="]" line="18" column="41" />
        <mark key="." line="18" column="21" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/appsettings.Local.json" timestamp="1553532121494">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="19" column="4" />
        <mark key="." line="11" column="36" />
        <mark key="^" line="10" column="28" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Data/IAccountingRepository.cs" timestamp="1553678419577">
        <mark key="'" line="5" column="21" />
        <mark key="[" line="7" column="0" />
        <mark key="]" line="8" column="79" />
        <mark key="." line="5" column="20" />
        <mark key="^" line="5" column="20" />
      </file>
    </filemarks>
    <jumps>
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/DependencyInjection/AccountingRepositoryExtensions.cs" />
      <jump line="32" column="90" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="34" column="101" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="29" column="55" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="99" column="60" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="101" column="49" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/9C7A17BB-5DDC-410C-BAAB-2223C5BA5FF0/4F/It.cs" />
      <jump line="55" column="25" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="80" column="22" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="51" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="81" column="58" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/28/8c0b808a/IClientConfig.cs" />
      <jump line="44" column="39" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/9a/a5f6df1b/IAmazonS3.cs" />
      <jump line="47" column="94" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="2161" column="35" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="50" column="24" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="61" column="20" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="65" column="46" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="77" column="72" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="83" column="210" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/76DEF016-194A-4B34-8E32-044F29ABD18E/04/2b2eabd8/Uri.cs" />
      <jump line="72" column="61" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="66" column="220" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/ba/0a6cb9d4/EndpointResolver.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/44/574d5347/ClientConfig.cs" />
      <jump line="94" column="50" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/ba/0a6cb9d4/EndpointResolver.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/5b/445b506d/AmazonServiceClient.cs" />
      <jump line="112" column="42" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="430" column="51" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/5b/445b506d/AmazonServiceClient.cs" />
      <jump line="469" column="51" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/5b/445b506d/AmazonServiceClient.cs" />
      <jump line="471" column="116" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/5b/445b506d/AmazonServiceClient.cs" />
      <jump line="403" column="38" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/5b/445b506d/AmazonServiceClient.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/87/a7e683d6/DefaultRequest.cs" />
      <jump line="48" column="100" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="277" column="57" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/06/3344c78f/GetPreSignedUrlRequest.cs" />
      <jump line="284" column="29" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="268" column="29" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="104" column="57" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="88" column="38" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/f0/6fb3ef6f/AWS4PreSignedUrlSigner.cs" />
      <jump line="125" column="36" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/f0/6fb3ef6f/AWS4PreSignedUrlSigner.cs" />
      <jump line="50" column="99" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="91" column="67" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/IInstructorPayoutService.cs" />
      <jump line="90" column="62" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="38" column="88" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="115" column="51" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="44" column="81" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="129" column="23" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="48" column="74" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="40" column="36" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="93" column="42" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="64" column="57" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="87" column="62" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="130" column="31" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/67/139426b9/ICoreAmazonS3.cs" />
      <jump line="47" column="104" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="54" column="72" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests.Core/Fixtures/ServiceProviderFixture.cs" />
      <jump line="126" column="36" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Http/Accounting/IInstructorPayoutHttpService.cs" />
      <jump line="162" column="19" filename="C:/projects/Accounting/Web/API/test/Accounting.Api.IntegrationTests/Controllers/QuarterlyPayoutControllerTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/test/Accounting.Api.IntegrationTests/Fixtures/TestServerFixture.cs" />
      <jump line="125" column="77" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="34" column="64" filename="C:/projects/Accounting/Worker/B2bRegistrationIngester/test/Accounting.B2bRegistrationIngester.IntegrationTests.Core/Fixtures/ServiceProviderFixture.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/B2bRegistrationIngester/src/Accounting.B2bRegistrationIngester/Data/AccountingRepository.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/9B2250D1-FB76-44B9-8AF1-AB5ED79E762F/28/9fa5bd76/EntityFrameworkServiceCollectionExtensions.cs" />
      <jump line="33" column="30" filename="C:/projects/Accounting/Worker/B2bRegistrationIngester/test/Accounting.B2bRegistrationIngester.IntegrationTests.Core/Fixtures/ServiceProviderFixture.cs" />
      <jump line="70" column="4" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/9B2250D1-FB76-44B9-8AF1-AB5ED79E762F/28/9fa5bd76/EntityFrameworkServiceCollectionExtensions.cs" />
      <jump line="118" column="36" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/9B2250D1-FB76-44B9-8AF1-AB5ED79E762F/28/9fa5bd76/EntityFrameworkServiceCollectionExtensions.cs" />
      <jump line="134" column="52" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/6d/236d4e88/ITransferUtility.cs" />
      <jump line="133" column="67" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/InstructorPayoutService.cs" />
      <jump line="12" column="36" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="34" column="61" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Infra/Accounting.Templating/Implementations/RazorTemplateService.cs" />
      <jump line="29" column="32" filename="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Implementations/DinkToPdfGenerator.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/6C4B901F-88A9-49B5-A720-CC208C735084/af/f6cd3ecb/ObjectSettings.cs" />
      <jump line="269" column="12" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport_Mock.html" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQueryResult.cs" />
      <jump line="24" column="54" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="39" column="28" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Controllers/InstructorPayoutDetailM2mController.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQuery.cs" />
      <jump line="0" column="0" filename="/CustomAssemblyLoadContext.cs" />
      <jump line="33" column="34" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Extensions/PdfServiceExtensions.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Infrastructure/Initialization/Assembly/CustomAssemblyLoadContext.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="29" column="39" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="26" column="19" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="19" column="32" filename="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Implementations/DinkToPdfGenerator.cs" />
      <jump line="8" column="44" filename="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Implementations/DinkToPdfGenerator.cs" />
      <jump line="9" column="37" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="88" column="31" filename="C:/projects/Accounting/Web/API/test/Accounting.Api.Tests/Services/Pdf/PdfServiceTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Contracts/IPdfGenerator.cs" />
      <jump line="56" column="57" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="0" column="0" filename="C:/projects/UI-Web/ClientApp/styles/vars/urls.scss" />
      <jump line="92" column="8" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport_Mock.html" />
      <jump line="21" column="20" filename="C:/projects/UI-Web/ClientApp/themes/three/styles/text/fonts.scss" />
      <jump line="106" column="12" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport_Mock.html" />
    </jumps>
    <registers>
      <register name="a" type="4">
        <text>MuseoSans-500</text>
      </register>
      <register name="&quot;" type="4">
        <text>Roboto</text>
      </register>
      <register name="d" type="4">
        <text>Task SetS3UrlToInstructorPayout(InstructorPayout record, string s3Url)</text>
      </register>
      <register name="e" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbHRpcCAmJiB0b29sdGlwSWQgPwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPFJlYWN0VG9vbHRpcCBpZD17dG9vbHRpcElkfSBwbGFjZT0idG9wIiB0eXBlPSJkYXJrIiBlZmZlY3Q9InNvbGlkIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Rvb2x0aXB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1JlYWN0VG9vbHRpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbnVsbAogICAgICAgICAgICAgICAgICAgICAgICB9Cg==</text>
      </register>
      <register name="f" type="4">
        <text>Invalid pagination parameters</text>
      </register>
      <register name="i" type="4">
        <keys>
          <key char="102" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="42" code="0" mods="0" />
          <key char="121" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="82" mods="130" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="8" mods="0" />
          <key char="65535" code="82" mods="130" />
          <key char="48" code="0" mods="0" />
          <key char="40" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="82" mods="130" />
          <key char="97" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="40" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="123" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="76" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="83" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="83" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="62" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="64" code="0" mods="0" />
          <key char="113" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="64" code="0" mods="0" />
          <key char="113" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="64" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
        </keys>
      </register>
      <register name="*" type="4">
        <text>CourseCatalogEnterpriseTableStore</text>
      </register>
      <register name="k" type="4">
        <keys>
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="-" type="4">
        <text>Roboto</text>
      </register>
      <register name="/" type="4">
        <text>$ASSETS_CF</text>
      </register>
      <register name="0" type="4">
        <text>#{$ASSETS_CF}/themes/three/fonts/</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="q" type="4">
        <keys>
          <key char="116" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="80" code="0" mods="0" />
          <key char="65535" code="8" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBhZ2VzQ291bnQgPSB0cnVlLAo=</text>
      </register>
      <register name="r" type="2">
        <text encoding="base64">aW1wb3J0IFJlYWN0VG9vbHRpcCBmcm9tICdyZWFjdC10b29sdGlwJzsK</text>
      </register>
      <register name="3" type="4">
        <text>{
                                Left = &quot;CyberU, Inc. \n [page] of [topage]&quot;,
                                Center = &quot;1601 Cloverfield Blvd., Suite 600S \n Santa Monica, Ca 90404&quot;,
                                Right = &quot;www.cyberu.com \n enterprise@cyberu.com&quot;,
                                FontName = &quot;Roboto&quot;,
                                FontSize = 6,
                            }</text>
      </register>
      <register name="s" type="4">
        <text>ASSETS_CF</text>
      </register>
      <register name="4" type="4">
        <text>{
                        Margins = {
                            Bottom = 30,
                            Left = 30,
                            Right = 30,
                        }
                    }</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgIENlbnRlciA9Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">bmFtZXNwYWNlIEFjY291bnRpbmcuQXBpLkluZnJhc3RydWN0dXJlLkluaXRpYWxpemF0aW9uLkFzc2VtYmx5CnsKICAgIHB1YmxpYyBjbGFzcyBDbGFzczEKICAgIHsKCiAgICB9Cn0K</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgIDxJdGVtR3JvdXA+CiAgICAgIDxOb25lIFVwZGF0ZT0ibGlid2todG1sdG94LnNvIj4KICAgICAgICA8Q29weVRvT3V0cHV0RGlyZWN0b3J5PkFsd2F5czwvQ29weVRvT3V0cHV0RGlyZWN0b3J5PgogICAgICA8L05vbmU+CiAgICA8L0l0ZW1Hcm91cD4K</text>
      </register>
      <register name="w" type="4">
        <keys>
          <key char="101" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="75" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="83" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="8" type="2">
        <text encoding="base64">Z3JvdXAgYnkgaW5zdHJ1Y3Rvcl9wYXlvdXRfaWQ7Cg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">am9pbiBhY2NvdW50aW5nLmluc3RydWN0b3JfcGF5b3V0cyBhcyBrIG9uIGsuaWQgPSBpbnN0cnVjdG9yX3BheW91dF9pZAo=</text>
      </register>
      <register name="y" type="4">
        <text>.</text>
      </register>
      <register name=":" type="4">
        <text>%s/$ASSETS_CF/https:\/\/d2ujqwp3hb8j8i.cloudfront.net/g</text>
      </register>
    </registers>
    <search>
      <last-search>$ASSETS_CF</last-search>
      <last-offset />
      <last-pattern>$ASSETS_CF</last-pattern>
      <last-replace>https:\/\/d2ujqwp3hb8j8i.cloudfront.net</last-replace>
      <last-substitute>$ASSETS_CF</last-substitute>
      <last-dir>1</last-dir>
      <show-last>true</show-last>
    </search>
    <history>
      <history-search>
        <entry>getcu</entry>
        <entry>dispose</entry>
        <entry>percent</entry>
        <entry encoding="base64">XDxUUHJvdmlkZXJcPg==</entry>
        <entry>getdefaul</entry>
        <entry>isdef</entry>
        <entry>this.</entry>
        <entry>this\.</entry>
        <entry>descrip</entry>
        <entry>number</entry>
        <entry>\\</entry>
        <entry>timestamp without time zone</entry>
        <entry>s3</entry>
        <entry>internal</entry>
        <entry>url</entry>
        <entry encoding="base64">XDx0b3RhbHNcPg==</entry>
        <entry>\#\{threeCDNFonts\}</entry>
        <entry>#{threeCDNFonts}</entry>
        <entry>#{$threeCDNFonts}</entry>
        <entry>$ASSETS_CF</entry>
      </history-search>
      <history-cmd>
        <entry>let @a=@&quot;</entry>
        <entry>let @a</entry>
        <entry>s/\\/\\/g</entry>
        <entry>s/\\/\\\\/g</entry>
        <entry>action GotoSuperMethod</entry>
        <entry>%s/PaymentDbContext/PaymentsDbContext/g</entry>
        <entry>%s/this.//g</entry>
        <entry>%s/this\.//g</entry>
        <entry>s/\\//g</entry>
        <entry>reg</entry>
        <entry>action VimVisualSwapSelections</entry>
        <entry>action RenameElement</entry>
        <entry>action ShowErrorDescription</entry>
        <entry>action CommentByLineComment</entry>
        <entry>action GotoImplementation</entry>
        <entry>%s/\#\{threeCDNFonts\}/$ASSETS_CF\/themes\/three\/fonts\//g</entry>
        <entry>%s/#{threeCDNFonts}/$ASSETS_CF\/themes\/three\/fonts\//g</entry>
        <entry>%s/#{$threeCDNFonts}/$ASSETS_CF\/themes\/three\/fonts\//g</entry>
        <entry>%s/$ASSETS_CF/https://d2ujqwp3hb8j8i.cloudfront.net</entry>
        <entry>%s/$ASSETS_CF/https:\/\/d2ujqwp3hb8j8i.cloudfront.net/g</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed BACK_SLASH</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>