<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Controllers/InstructorPayoutDetailM2mController.cs" timestamp="1553783284136">
        <mark key="'" line="50" column="69" />
        <mark key="[" line="46" column="16" />
        <mark key="]" line="46" column="27" />
        <mark key="^" line="46" column="27" />
        <mark key="." line="46" column="27" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Resources/ExceptionMessages.resx" timestamp="1553793726471">
        <mark key="[" line="119" column="0" />
        <mark key="]" line="121" column="9" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Auth/Models/GetUserResponse.cs" timestamp="1553773217040">
        <mark key="[" line="2" column="17" />
        <mark key="]" line="2" column="31" />
        <mark key="^" line="11" column="29" />
        <mark key="." line="11" column="29" />
      </file>
      <file name="C:/projects/Accounting/Web/API/test/Accounting.Api.Tests/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQueryHandlerTests.cs" timestamp="1553783134856">
        <mark key="[" line="74" column="32" />
        <mark key="]" line="74" column="42" />
        <mark key="." line="74" column="42" />
        <mark key="^" line="74" column="42" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" timestamp="1553697521552">
        <mark key="'" line="85" column="62" />
        <mark key="[" line="67" column="64" />
        <mark key="]" line="67" column="63" />
        <mark key="^" line="67" column="63" />
        <mark key="." line="67" column="63" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Auth/IAuthService.cs" timestamp="1553781289095">
        <mark key="[" line="9" column="74" />
        <mark key="]" line="9" column="74" />
        <mark key="^" line="9" column="74" />
        <mark key="." line="9" column="74" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Options/LmsServiceOptions.cs" timestamp="1553529476932">
        <mark key="[" line="2" column="17" />
        <mark key="]" line="2" column="26" />
        <mark key="." line="2" column="26" />
        <mark key="^" line="2" column="26" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Resources/InstructorPayoutReport.Designer.cs" timestamp="1553793980730">
        <mark key="[" line="63" column="42" />
        <mark key="]" line="63" column="42" />
        <mark key="." line="63" column="42" />
        <mark key="^" line="10" column="46" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests.Core/Accounting.InstructorPayoutReportGenerator.IntegrationTests.Core.csproj" timestamp="1553617817084">
        <mark key="[" line="8" column="16" />
        <mark key="]" line="9" column="3" />
        <mark key="." line="9" column="3" />
        <mark key="^" line="9" column="3" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Adapters/DateTimeAdapter.cs" timestamp="1553686779206">
        <mark key="[" line="6" column="8" />
        <mark key="]" line="6" column="49" />
        <mark key="^" line="6" column="49" />
        <mark key="." line="6" column="49" />
      </file>
      <file name="/Dummy.cs" timestamp="1553862630890">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests.Core/Fixtures/ServiceProviderFixture.cs" timestamp="1553696675409">
        <mark key="'" line="50" column="72" />
        <mark key="[" line="38" column="21" />
        <mark key="]" line="38" column="33" />
        <mark key="." line="38" column="33" />
        <mark key="^" line="38" column="33" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/wwwroot/footer.html" timestamp="1553853542774">
        <mark key="'" line="8" column="5" />
        <mark key="[" line="8" column="29" />
        <mark key="]" line="8" column="41" />
        <mark key="^" line="8" column="41" />
        <mark key="." line="8" column="41" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport_Mock.html" timestamp="1553858006480">
        <mark key="[" line="110" column="0" />
        <mark key="]" line="110" column="0" />
        <mark key="." line="110" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/IPdfService.cs" timestamp="1553781474263">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="8" column="92" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" timestamp="1553862701150">
        <mark key="'" line="47" column="81" />
        <mark key="[" line="47" column="125" />
        <mark key="]" line="47" column="128" />
        <mark key="^" line="47" column="128" />
        <mark key="." line="47" column="128" />
      </file>
      <file name="/quarters [payments@localhost]" timestamp="1553846707089">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Accounting/InstructorPayoutService.cs" timestamp="1553679563492">
        <mark key="'" line="19" column="44" />
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
        <mark key="^" line="60" column="70" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Extensions/PdfServiceExtensions.cs" timestamp="1553707578726">
        <mark key="'" line="33" column="34" />
        <mark key="[" line="33" column="108" />
        <mark key="]" line="34" column="11" />
        <mark key="." line="34" column="11" />
        <mark key="^" line="34" column="11" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetailReport/ListInstructorPayoutDetailQueryHandler.cs" timestamp="1553774281224">
        <mark key="[" line="19" column="43" />
        <mark key="]" line="19" column="48" />
        <mark key="^" line="19" column="48" />
        <mark key="." line="19" column="48" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Startup.cs" timestamp="1553862475472">
        <mark key="'" line="46" column="21" />
        <mark key="[" line="46" column="12" />
        <mark key="]" line="46" column="46" />
        <mark key="." line="46" column="12" />
        <mark key="^" line="46" column="11" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetailReport/ListInstructorPayoutDetailQuery.cs" timestamp="1553774189289">
        <mark key="[" line="6" column="43" />
        <mark key="]" line="6" column="48" />
        <mark key="^" line="6" column="48" />
        <mark key="." line="6" column="48" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Data/AccountingRepository.cs" timestamp="1553678541467">
        <mark key="'" line="10" column="25" />
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
        <mark key="^" line="21" column="18" />
      </file>
      <file name="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Contracts/IPdfGenerator.cs" timestamp="1553710333338">
        <mark key="[" line="6" column="75" />
        <mark key="]" line="6" column="82" />
        <mark key="^" line="6" column="82" />
        <mark key="." line="6" column="82" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Exceptions/InstructorPayoutAlreadyCalculatedException.cs" timestamp="1553534611481">
        <mark key="[" line="5" column="46" />
        <mark key="]" line="5" column="54" />
        <mark key="^" line="5" column="54" />
        <mark key="." line="5" column="54" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Resources/InstructorPayoutReport.resx" timestamp="1553794075188">
        <mark key="[" line="20" column="0" />
        <mark key="]" line="28" column="9" />
        <mark key="." line="29" column="32" />
        <mark key="^" line="29" column="32" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Auth/AuthService.cs" timestamp="1553781282746">
        <mark key="[" line="32" column="21" />
        <mark key="]" line="32" column="86" />
        <mark key="." line="34" column="0" />
        <mark key="^" line="32" column="40" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" timestamp="1553697650630">
        <mark key="'" line="130" column="67" />
        <mark key="[" line="116" column="40" />
        <mark key="]" line="116" column="39" />
        <mark key="^" line="116" column="39" />
        <mark key="." line="116" column="39" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Data.Entity/InstructorPayout.cs" timestamp="1553784964093">
        <mark key="[" line="5" column="17" />
        <mark key="]" line="5" column="32" />
        <mark key="^" line="5" column="23" />
        <mark key="." line="5" column="23" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests.Core/ObjectMothers/InstructorPayoutMother.cs" timestamp="1553678119582">
        <mark key="'" line="8" column="42" />
        <mark key="[" line="13" column="73" />
        <mark key="]" line="13" column="102" />
        <mark key="." line="13" column="102" />
        <mark key="^" line="13" column="102" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Resources/InstructorPayoutReportContent.Designer.cs" timestamp="1553794115306">
        <mark key="[" line="10" column="10" />
        <mark key="]" line="10" column="46" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQueryResult.cs" timestamp="1553781865472">
        <mark key="[" line="8" column="41" />
        <mark key="]" line="8" column="40" />
        <mark key="." line="8" column="40" />
        <mark key="^" line="8" column="40" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Http/Accounting/InstructorPayoutHttpService.cs" timestamp="1553680625317">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
        <mark key="^" line="42" column="18" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Accounting.Api.csproj" timestamp="1553784141714">
        <mark key="[" line="22" column="0" />
        <mark key="]" line="22" column="0" />
        <mark key="." line="22" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Controllers/InstructorPayoutDetailController.cs" timestamp="1553783303195">
        <mark key="'" line="39" column="47" />
        <mark key="[" line="45" column="31" />
        <mark key="]" line="46" column="27" />
        <mark key="^" line="46" column="27" />
        <mark key="." line="46" column="27" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Resources/InstructorPayoutReportContent.resx" timestamp="1553794600790">
        <mark key="[" line="30" column="0" />
        <mark key="]" line="30" column="0" />
        <mark key="." line="30" column="0" />
        <mark key="^" line="30" column="7" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/01f8e213-5ecc-4708-bead-67f184c26463/console_1.sql" timestamp="1553705146139">
        <mark key="[" line="28" column="43" />
        <mark key="]" line="28" column="64" />
        <mark key="." line="28" column="64" />
        <mark key="^" line="28" column="64" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutBreakdownCalculator/src/Accounting.InstructorPayoutBreakdownCalculator/Data/IAccountingRepository.cs" timestamp="1553523155190">
        <mark key="[" line="12" column="24" />
        <mark key="]" line="12" column="26" />
        <mark key="." line="12" column="26" />
        <mark key="^" line="12" column="26" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests.Core/Builders/InstructorPayoutBreakdownCalculatorInputBuilder.cs" timestamp="1553619142069">
        <mark key="[" line="22" column="42" />
        <mark key="]" line="22" column="41" />
        <mark key="." line="22" column="41" />
        <mark key="^" line="22" column="41" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetailReport/ListInstructorPayoutDetailReportQueryHandler.cs" timestamp="1553781799562">
        <mark key="'" line="75" column="22" />
        <mark key="[" line="37" column="0" />
        <mark key="]" line="85" column="13" />
        <mark key="^" line="75" column="39" />
        <mark key="." line="75" column="39" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetailReport/ListInstructorPayoutDetailQueryResult.cs" timestamp="1553774750917">
        <mark key="[" line="8" column="41" />
        <mark key="]" line="8" column="40" />
        <mark key="^" line="8" column="40" />
        <mark key="." line="8" column="40" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests.Core/ObjectMothers/InstructorPayoutReportInputMother.cs" timestamp="1553620076008">
        <mark key="[" line="5" column="17" />
        <mark key="]" line="5" column="49" />
        <mark key="." line="16" column="47" />
        <mark key="^" line="16" column="47" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Startup.cs" timestamp="1553686851851">
        <mark key="'" line="30" column="33" />
        <mark key="[" line="47" column="26" />
        <mark key="]" line="47" column="66" />
        <mark key="." line="47" column="66" />
        <mark key="^" line="47" column="66" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/InstructorPayoutService.cs" timestamp="1553693197036">
        <mark key="'" line="67" column="53" />
        <mark key="[" line="54" column="92" />
        <mark key="]" line="55" column="11" />
        <mark key="^" line="55" column="11" />
        <mark key="." line="55" column="11" />
      </file>
      <file name="C:/projects/UI-Web/appsettings.json" timestamp="1553770818391">
        <mark key="[" line="38" column="25" />
        <mark key="]" line="38" column="46" />
        <mark key="^" line="38" column="33" />
        <mark key="." line="38" column="33" />
      </file>
      <file name="/dummy.sql" timestamp="1553784917960">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/test/Accounting.Api.Tests/Services/Pdf/PdfServiceTests.cs" timestamp="1553710571490">
        <mark key="'" line="88" column="31" />
        <mark key="[" line="88" column="53" />
        <mark key="]" line="88" column="53" />
        <mark key="^" line="88" column="64" />
        <mark key="." line="88" column="53" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/DependencyInjection/LmsServiceExtensions.cs" timestamp="1553529439289">
        <mark key="[" line="8" column="47" />
        <mark key="]" line="8" column="47" />
        <mark key="." line="8" column="47" />
        <mark key="^" line="8" column="47" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/IPdfReportService.cs" timestamp="1553507472408">
        <mark key="[" line="6" column="13" />
        <mark key="]" line="6" column="13" />
        <mark key="." line="6" column="18" />
        <mark key="^" line="6" column="18" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests/Accounting.InstructorPayoutReportGenerator.Tests.csproj" timestamp="1553617322437">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="36" />
        <mark key="." line="3" column="0" />
        <mark key="^" line="5" column="3" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" timestamp="1553852203723">
        <mark key="'" line="97" column="8" />
        <mark key="[" line="112" column="0" />
        <mark key="]" line="123" column="125746" />
        <mark key="." line="123" column="125724" />
        <mark key="^" line="123" column="125724" />
      </file>
      <file name="/Dummy.txt" timestamp="1553848855491">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="8" />
        <mark key="." line="0" column="8" />
      </file>
      <file name="/C# Console" timestamp="1553794738022">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQueryHandler.cs" timestamp="1553785515557">
        <mark key="[" line="75" column="68" />
        <mark key="]" line="75" column="68" />
        <mark key="." line="75" column="68" />
        <mark key="^" line="56" column="134" />
      </file>
      <file name="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Implementations/DinkToPdfGenerator.cs" timestamp="1553710662701">
        <mark key="'" line="8" column="44" />
        <mark key="[" line="30" column="0" />
        <mark key="]" line="30" column="0" />
        <mark key="." line="30" column="0" />
        <mark key="^" line="29" column="58" />
      </file>
      <file name="/payments.accounting.quarters [payments@localhost]" timestamp="1553784915020">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/B4EF600F-4A59-4FE2-865A-8F97F915FB9D/17/709dbd66/MvcCoreServiceCollectionExtensions.cs" timestamp="1553862355453">
        <mark key="'" line="115" column="53" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Exceptions/ExceptionCode.cs" timestamp="1553534648361">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="12" column="9" />
        <mark key="." line="9" column="0" />
        <mark key="^" line="6" column="21" />
      </file>
      <file name="C:/projects/Accounting/Web/API/test/Accounting.Api.IntegrationTests/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQueryHandlerTests.cs" timestamp="1553782920880">
        <mark key="[" line="57" column="79" />
        <mark key="]" line="57" column="91" />
        <mark key="." line="57" column="91" />
        <mark key="^" line="57" column="91" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/IInstructorPayoutService.cs" timestamp="1553680482819">
        <mark key="[" line="11" column="0" />
        <mark key="]" line="11" column="0" />
        <mark key="." line="11" column="0" />
        <mark key="^" line="6" column="18" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetailReport/ListInstructorPayoutDetailReportQuery.cs" timestamp="1553781399813">
        <mark key="[" line="1" column="0" />
        <mark key="]" line="1" column="0" />
        <mark key="." line="1" column="0" />
        <mark key="^" line="6" column="114" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.Tests.Core/ObjectMothers/InstructorPayoutDetailsCalculatorInputMother.cs" timestamp="1553619175696">
        <mark key="[" line="7" column="22" />
        <mark key="]" line="7" column="55" />
        <mark key="." line="7" column="55" />
        <mark key="^" line="7" column="55" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQuery.cs" timestamp="1553783247841">
        <mark key="[" line="32" column="15" />
        <mark key="]" line="32" column="18" />
        <mark key="^" line="32" column="18" />
        <mark key="." line="32" column="18" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Http/Accounting/InstructorPayoutService.cs" timestamp="1553679776124">
        <mark key="[" line="13" column="33" />
        <mark key="]" line="13" column="36" />
        <mark key="^" line="13" column="36" />
        <mark key="." line="13" column="36" />
      </file>
      <file name="/payments.accounting.instructor_payouts [payments@localhost]" timestamp="1553784905168">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/projects/Accounting/Web/API/src/Accounting.Api/appsettings.Local.json" timestamp="1553532121494">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="19" column="4" />
        <mark key="." line="11" column="36" />
        <mark key="^" line="10" column="28" />
      </file>
      <file name="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Data/IAccountingRepository.cs" timestamp="1553678419577">
        <mark key="'" line="5" column="21" />
        <mark key="[" line="7" column="0" />
        <mark key="]" line="8" column="79" />
        <mark key="." line="5" column="20" />
        <mark key="^" line="5" column="20" />
      </file>
    </filemarks>
    <jumps>
      <jump line="430" column="51" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/5b/445b506d/AmazonServiceClient.cs" />
      <jump line="469" column="51" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/5b/445b506d/AmazonServiceClient.cs" />
      <jump line="471" column="116" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/5b/445b506d/AmazonServiceClient.cs" />
      <jump line="403" column="38" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/5b/445b506d/AmazonServiceClient.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/87/a7e683d6/DefaultRequest.cs" />
      <jump line="48" column="100" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="277" column="57" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/06/3344c78f/GetPreSignedUrlRequest.cs" />
      <jump line="284" column="29" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="268" column="29" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="104" column="57" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/7b/bf395295/AmazonS3Client.cs" />
      <jump line="88" column="38" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/f0/6fb3ef6f/AWS4PreSignedUrlSigner.cs" />
      <jump line="125" column="36" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/f0/6fb3ef6f/AWS4PreSignedUrlSigner.cs" />
      <jump line="50" column="99" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="91" column="67" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/IInstructorPayoutService.cs" />
      <jump line="90" column="62" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="38" column="88" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="115" column="51" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="44" column="81" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="129" column="23" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="48" column="74" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="40" column="36" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="93" column="42" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="64" column="57" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="87" column="62" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Function.cs" />
      <jump line="130" column="31" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/DC94F7E4-3163-4768-AD5C-8901EC225467/67/139426b9/ICoreAmazonS3.cs" />
      <jump line="47" column="104" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="54" column="72" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests.Core/Fixtures/ServiceProviderFixture.cs" />
      <jump line="126" column="36" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/Http/Accounting/IInstructorPayoutHttpService.cs" />
      <jump line="162" column="19" filename="C:/projects/Accounting/Web/API/test/Accounting.Api.IntegrationTests/Controllers/QuarterlyPayoutControllerTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/test/Accounting.Api.IntegrationTests/Fixtures/TestServerFixture.cs" />
      <jump line="125" column="77" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="34" column="64" filename="C:/projects/Accounting/Worker/B2bRegistrationIngester/test/Accounting.B2bRegistrationIngester.IntegrationTests.Core/Fixtures/ServiceProviderFixture.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/B2bRegistrationIngester/src/Accounting.B2bRegistrationIngester/Data/AccountingRepository.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/9B2250D1-FB76-44B9-8AF1-AB5ED79E762F/28/9fa5bd76/EntityFrameworkServiceCollectionExtensions.cs" />
      <jump line="33" column="30" filename="C:/projects/Accounting/Worker/B2bRegistrationIngester/test/Accounting.B2bRegistrationIngester.IntegrationTests.Core/Fixtures/ServiceProviderFixture.cs" />
      <jump line="70" column="4" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/9B2250D1-FB76-44B9-8AF1-AB5ED79E762F/28/9fa5bd76/EntityFrameworkServiceCollectionExtensions.cs" />
      <jump line="118" column="36" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/9B2250D1-FB76-44B9-8AF1-AB5ED79E762F/28/9fa5bd76/EntityFrameworkServiceCollectionExtensions.cs" />
      <jump line="134" column="52" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/A6B202FC-1A2C-4CA3-A4A8-B1499F63D564/6d/236d4e88/ITransferUtility.cs" />
      <jump line="133" column="67" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/test/Accounting.InstructorPayoutReportGenerator.IntegrationTests/FunctionTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/InstructorPayoutReportGenerator/src/Accounting.InstructorPayoutReportGenerator/Services/InstructorPayoutService.cs" />
      <jump line="12" column="36" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="34" column="61" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Infra/Accounting.Templating/Implementations/RazorTemplateService.cs" />
      <jump line="29" column="32" filename="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Implementations/DinkToPdfGenerator.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/6C4B901F-88A9-49B5-A720-CC208C735084/af/f6cd3ecb/ObjectSettings.cs" />
      <jump line="269" column="12" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport_Mock.html" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQueryResult.cs" />
      <jump line="24" column="54" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="0" column="0" filename="/CustomAssemblyLoadContext.cs" />
      <jump line="33" column="34" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Extensions/PdfServiceExtensions.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Infrastructure/Initialization/Assembly/CustomAssemblyLoadContext.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="29" column="39" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="26" column="19" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="19" column="32" filename="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Implementations/DinkToPdfGenerator.cs" />
      <jump line="8" column="44" filename="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Implementations/DinkToPdfGenerator.cs" />
      <jump line="9" column="37" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="88" column="31" filename="C:/projects/Accounting/Web/API/test/Accounting.Api.Tests/Services/Pdf/PdfServiceTests.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Contracts/IPdfGenerator.cs" />
      <jump line="56" column="57" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="0" column="0" filename="C:/projects/UI-Web/ClientApp/styles/vars/urls.scss" />
      <jump line="92" column="8" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport_Mock.html" />
      <jump line="21" column="20" filename="C:/projects/UI-Web/ClientApp/themes/three/styles/text/fonts.scss" />
      <jump line="106" column="12" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport_Mock.html" />
      <jump line="48" column="55" filename="C:/projects/Accounting/Worker/B2bRegistrationIngester/src/Accounting.B2bRegistrationIngester/Services/Lms/LmsService.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Worker/B2bRegistrationIngester/src/Accounting.B2bRegistrationIngester/Function.cs" />
      <jump line="39" column="45" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Controllers/InstructorPayoutDetailM2mController.cs" />
      <jump line="76" column="22" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetailReport/ListInstructorPayoutDetailReportQueryHandler.cs" />
      <jump line="10" column="27" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetailReport/ListInstructorPayoutDetailReportQueryResult.cs" />
      <jump line="75" column="22" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetailReport/ListInstructorPayoutDetailReportQueryHandler.cs" />
      <jump line="50" column="71" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Controllers/InstructorPayoutDetailM2mController.cs" />
      <jump line="49" column="69" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Controllers/InstructorPayoutDetailM2mController.cs" />
      <jump line="39" column="47" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Controllers/InstructorPayoutDetailController.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQuery.cs" />
      <jump line="38" column="16" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQueryHandler.cs" />
      <jump line="232" column="8" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="245" column="23" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="39" column="75" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Domain/Queries/InstructorPayoutDetail/ListInstructorPayoutDetailQueryHandler.cs" />
      <jump line="0" column="0" filename="C:/projects/Accounting/Infra/Accounting.PdfGenerator/Implementations/DinkToPdfGenerator.cs" />
      <jump line="64" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="247" column="85" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="3" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="111" column="17" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="119" column="8" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="106" column="0" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="115" column="19251" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="97" column="8" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/Templates/InstructorPayoutReport.cshtml" />
      <jump line="9" column="5" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/wwwroot/footer.html" />
      <jump line="42" column="34" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="43" column="29" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/7AFFF0CD-737B-40CF-8237-F5063F135BDE/90/9d5c324f/Url.cs" />
      <jump line="47" column="81" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Services/Pdf/PdfService.cs" />
      <jump line="115" column="53" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/B4EF600F-4A59-4FE2-865A-8F97F915FB9D/17/709dbd66/MvcCoreServiceCollectionExtensions.cs" />
      <jump line="46" column="21" filename="C:/projects/Accounting/Web/API/src/Accounting.Api/Startup.cs" />
    </jumps>
    <registers>
      <register name="a" type="4">
        <text>www.cyberu.com \n enterprise@cyberu.com</text>
      </register>
      <register name="&quot;" type="4">
        <text>Scheme</text>
      </register>
      <register name="d" type="4">
        <text>Task SetS3UrlToInstructorPayout(InstructorPayout record, string s3Url)</text>
      </register>
      <register name="e" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbHRpcCAmJiB0b29sdGlwSWQgPwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPFJlYWN0VG9vbHRpcCBpZD17dG9vbHRpcElkfSBwbGFjZT0idG9wIiB0eXBlPSJkYXJrIiBlZmZlY3Q9InNvbGlkIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Rvb2x0aXB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1JlYWN0VG9vbHRpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbnVsbAogICAgICAgICAgICAgICAgICAgICAgICB9Cg==</text>
      </register>
      <register name="f" type="4">
        <text>Invalid pagination parameters</text>
      </register>
      <register name="i" type="4">
        <keys>
          <key char="102" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="42" code="0" mods="0" />
          <key char="121" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="82" mods="130" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="8" mods="0" />
          <key char="65535" code="82" mods="130" />
          <key char="48" code="0" mods="0" />
          <key char="40" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="82" mods="130" />
          <key char="97" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="40" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="123" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="76" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="83" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="83" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="62" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="64" code="0" mods="0" />
          <key char="113" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="64" code="0" mods="0" />
          <key char="113" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="73" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="64" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
        </keys>
      </register>
      <register name="*" type="4">
        <text>CourseCatalogEnterpriseTableStore</text>
      </register>
      <register name="k" type="4">
        <keys>
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="-" type="4">
        <text>Scheme</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxBZGRIdHRwQ29udGV4dEFjY2Vzc29yXD4=</text>
      </register>
      <register name="0" type="4">
        <text>_httpContextAccessor.HttpContext.Request.Scheme</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIC5BZGRNdmNPcHRpb25zCg==</text>
      </register>
      <register name="q" type="4">
        <keys>
          <key char="116" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="80" code="0" mods="0" />
          <key char="65535" code="8" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="r" type="2">
        <text encoding="base64">aW1wb3J0IFJlYWN0VG9vbHRpcCBmcm9tICdyZWFjdC10b29sdGlwJzsK</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICBIdG1VcmwgPSBVcmwuQWN0aW9uKCJHZXRPcHRpb25zIiwgIkNvbnRyb2xsZXJOYW1lIiwgbmV3IHsgaWQgPSAxIH0pOyAiaHR0cDovL2xvY2FsaG9zdDo1MDA0LyIK</text>
      </register>
      <register name="s" type="4">
        <text>ASSETS_CF</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">dXNpbmcgU3lzdGVtLlNlY3VyaXR5LlBvbGljeTsK</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICBPCg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAK</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="w" type="4">
        <keys>
          <key char="101" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="75" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="83" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="8" type="2">
        <text encoding="base64">CiAgICAgICAgLyp9Ki8K</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="y" type="4">
        <text>.</text>
      </register>
      <register name=":" type="4">
        <text>action CommentByLineComment</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxBZGRIdHRwQ29udGV4dEFjY2Vzc29yXD4=</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxBZGRIdHRwQ29udGV4dEFjY2Vzc29yXD4=</last-pattern>
      <last-replace>https:\/\/d2ujqwp3hb8j8i.cloudfront.net</last-replace>
      <last-substitute>$ASSETS_CF</last-substitute>
      <last-dir>1</last-dir>
      <show-last>true</show-last>
    </search>
    <history>
      <history-search>
        <entry>this.</entry>
        <entry>this\.</entry>
        <entry>descrip</entry>
        <entry>number</entry>
        <entry>\\</entry>
        <entry>timestamp without time zone</entry>
        <entry>s3</entry>
        <entry>internal</entry>
        <entry>url</entry>
        <entry encoding="base64">XDx0b3RhbHNcPg==</entry>
        <entry>\#\{threeCDNFonts\}</entry>
        <entry>#{threeCDNFonts}</entry>
        <entry>#{$threeCDNFonts}</entry>
        <entry>$ASSETS_CF</entry>
        <entry encoding="base64">XDxiYXNlUXVlcnlcPg==</entry>
        <entry>letter</entry>
        <entry>MuseoSans-</entry>
        <entry>h1</entry>
        <entry encoding="base64">XDxoMVw+</entry>
        <entry encoding="base64">XDxBZGRIdHRwQ29udGV4dEFjY2Vzc29yXD4=</entry>
      </history-search>
      <history-cmd>
        <entry>let @a=@&quot;</entry>
        <entry>let @a</entry>
        <entry>s/\\/\\/g</entry>
        <entry>s/\\/\\\\/g</entry>
        <entry>action GotoSuperMethod</entry>
        <entry>%s/PaymentDbContext/PaymentsDbContext/g</entry>
        <entry>%s/this.//g</entry>
        <entry>%s/this\.//g</entry>
        <entry>s/\\//g</entry>
        <entry>reg</entry>
        <entry>%s/\#\{threeCDNFonts\}/$ASSETS_CF\/themes\/three\/fonts\//g</entry>
        <entry>%s/#{threeCDNFonts}/$ASSETS_CF\/themes\/three\/fonts\//g</entry>
        <entry>%s/#{$threeCDNFonts}/$ASSETS_CF\/themes\/three\/fonts\//g</entry>
        <entry>%s/$ASSETS_CF/https://d2ujqwp3hb8j8i.cloudfront.net</entry>
        <entry>%s/$ASSETS_CF/https:\/\/d2ujqwp3hb8j8i.cloudfront.net/g</entry>
        <entry>action RenameElement</entry>
        <entry>action ShowErrorDescription</entry>
        <entry>action GotoImplementation</entry>
        <entry>action VimVisualSwapSelections</entry>
        <entry>action CommentByLineComment</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed BACK_SLASH</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>